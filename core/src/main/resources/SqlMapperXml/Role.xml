<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ifhz.core.mapper.RoleMapper">
    <!-- 插入角色记录 -->
    <insert id="insertRole" parameterType="com.ifhz.core.po.Role">
        insert into ty_role
        (role_id,role_name,create_time,parent_id,levels)
        values
        (SEQ_ROLE.nextval,#{roleName},sysdate,#{parentId},#{levels})
        <selectKey resultType="long" keyProperty="role_id">
            SELECT SEQ_ROLE.CURRVAL FROM DUAL
        </selectKey>
    </insert>


    <!-- 批量插入角色与资源关系数据
    <insert id="batchInsertRoleResRef">
        <selectKey resultType="long" keyProperty="id">
            SELECT SEQ_TY_ROLE_RESOURCE_REF.CURRVAL FROM DUAL
        </selectKey>

        insert into ty_role_resource_ref
        (id,role_id,resource_id,acces,create_time)

        select  SEQ_TY_ROLE_RESOURCE_REF.NEXTVAL,A.*  from(
        <foreach collection="list" item="item" index="index" separator="union all">
            SELECT  '#{item.roleId,jdbcType=BIGINT}', '#{item.resourceId,jdbcType=BIGINT}',  '#{item.acces,jdbcType=INTEGER}', 'sysdate'  FROM DUAL
        </foreach>
        ) A
    </insert>


    <select id="getResourceList" resultType="java.util.HashMap">
        SELECT
            rrP.res_name AS parentName,
            GROUP_CONCAT(rr.resource_id) AS resIds,
            rr.parent_id AS parentId,
            GROUP_CONCAT(rr.res_name) AS resNames
        FROM
            ty_resource rr,
            (
            SELECT
            resource_id,
            res_name
            FROM
            ty_resource
            WHERE
            parent_id = -1
            ) rrP
        WHERE
            rr.parent_id = rrP.resource_id
        GROUP BY
            rr.parent_id
    </select>
    -->
    <select id="queryRoleInfoByRoleName">
        select
        t.role_name as roleName,
        t.create_time as createTime,
        GROUP_CONCAT(t.res_name) as moudleName,
        GROUP_CONCAT(t.acces) as moudleAcess
        from (
        select DISTINCT
        r.role_name,
        r.create_time,
        res.res_name,
        rr.acces
        from ty_role r
        join ty_role_resource_ref rr
        join ty_resource res on res.parent_id >0
        <if test="roleName!=null">
            where r.role_name=#{roleName}
        </if>
        ) t
    </select>

    <select id="findAllRole" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
    </select>

    <select id="findAllRoleSon" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where parent_id = #{roleId}
    </select>


    <select id="findRootRole" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where
        parent_id = -1
    </select>

    <select id="findAllChildrenById" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where
        parent_id = #{id}
    </select>


    <resultMap id="VoMap" type="com.ifhz.core.vo.RoleVo">
        <id column="roleId" property="roleId" jdbcType="BIGINT"/>
        <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="parentId" property="parentId" jdbcType="BIGINT"/>
        <result column="parentName" property="parentName" jdbcType="TIMESTAMP"/>
        <result column="levels" property="levels" jdbcType="BIGINT"/>
        <result column="fullPath" property="fullPath" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="findById" resultMap="VoMap">
        select
        child.role_id as roleId,
        child.role_name as roleName,
        child.create_time as createTime,
        child.parent_id as parentId,
        parent.role_name as parentName,
        child.levels,
        child.full_path as fullPath
        from
        ty_role child
        join
        ty_role parent
        on
        child.parent_id = parent.role_id
        where
        child.role_id = #{id}
    </select>


    <select id="getAdminRole" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where
        parent_id = -1
    </select>

    <select id="findParentById" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where
        role_id = #{id}
    </select>


    <select id="findByRoleName" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where
        role_name = #{roleName}
    </select>

    <select id="findByRoleNameBesideSelf" resultType="com.ifhz.core.po.Role">
        select
        role_id as roleId,
        role_name as roleName,
        create_time as createTime,
        parent_id as parentId,
        levels,
        full_path as fullPath
        from
        ty_role
        where
        role_name = #{roleName}
        and
        role_id != #{id}
    </select>


    <update id="updateFullPath" statementType="PREPARED" timeout="20000">
        update ty_role
        <set>
            full_path = #{fullPath},
        </set>
        where role_id = #{id}
    </update>

    <update id="updateRole" parameterType="com.ifhz.core.po.Role" statementType="PREPARED" timeout="20000">
        update ty_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName},
            </if>
        </set>
        where role_id = #{roleId}
    </update>


    <delete id="delete" parameterType="long">
        delete from
        ty_role
        where
        role_id=#{id}
    </delete>
</mapper>