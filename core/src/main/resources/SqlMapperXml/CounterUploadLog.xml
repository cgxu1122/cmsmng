<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ifhz.core.mapper.CounterUploadLogMapper">

    <resultMap id="CounterUploadLogResultMap" type="com.ifhz.core.po.CounterUploadLog">
        <id column="counter_id" property="counterId" jdbcType="BIGINT"/>
        <result column="imei" property="imei" jdbcType="VARCHAR"/>
        <result column="ua" property="ua" jdbcType="VARCHAR"/>
        <result column="model_name" property="modelName" jdbcType="VARCHAR"/>
        <result column="channel_id" property="channelId" jdbcType="VARCHAR"/>
        <result column="device_code" property="deviceCode" jdbcType="VARCHAR"/>
        <result column="batch_code" property="batchCode" jdbcType="VARCHAR"/>
        <result column="group_id" property="groupId" jdbcType="BIGINT"/>
        <result column="active" property="active" jdbcType="VARCHAR"/>
        <result column="process_time" property="processTime" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="CommonFieldSql">
        COUNTER_ID,
        IMEI,
        UA,
        MODEL_NAME,
        CHANNEL_ID,
        DEVICE_CODE,
        GROUP_ID,
        BATCH_CODE,
        PROCESS_TIME,
        CREATE_TIME,
        ACTIVE
    </sql>

    <insert id="insert" parameterType="com.ifhz.core.po.CounterUploadLog">
        <selectKey resultType="java.lang.Long" keyProperty="counterId" order="AFTER">
            SELECT SEQ_TY_COUNTER_UPLOAD_LOG.CURRVAL FROM DUAL
        </selectKey>
        insert into ${tableName}
        (
        <include refid="CommonFieldSql"/>
        )
        values
        (
        SEQ_TY_COUNTER_UPLOAD_LOG.NEXTVAL,
        #{imei,jdbcType=VARCHAR},
        #{ua,jdbcType=VARCHAR},
        #{modelName,jdbcType=VARCHAR},
        #{channelId,jdbcType=VARCHAR},
        #{deviceCode,jdbcType=VARCHAR},
        #{groupId,jdbcType=BIGINT},
        #{batchCode,jdbcType=VARCHAR},
        #{processTime,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP},
        #{active,jdbcType=VARCHAR}
        )
    </insert>

    <select id="getByImei">
        select
        <include refid="CommonFieldSql"/>
        from ${tableName}
        where imei = #{imei,jdbcType=VARCHAR}
    </select>
    <select id="getCounterUploadLog" parameterType="map" resultMap="CounterUploadLogResultMap">
        <![CDATA[

        select
        *
        from (
                select t2.*,rownum rn from ${tableName} t2
                         where t2.create_time >= #{startDate,jdbcType=TIMESTAMP}
                            and t2.create_time< #{endDate,jdbcType=TIMESTAMP}
        ) t where rn> #{startNum} and rn <= #{endNum}

        ]]>
    </select>
    <select id="getYesterdayLogCount" resultType="long" parameterType="map" statementType="STATEMENT">
        <![CDATA[

        select count(counter_id)  from ${tableName}
         where  create_time >= trunc(SYSDATE-1) and create_time< trunc(SYSDATE)

        ]]>
    </select>
    <select id="getLogCountByTime" resultType="long" parameterType="map">
        <![CDATA[

        select count(counter_id)  from ${tableName}
         where  create_time >= #{startDate,jdbcType=TIMESTAMP} and create_time< #{endDate,jdbcType=TIMESTAMP}

        ]]>
    </select>
</mapper>