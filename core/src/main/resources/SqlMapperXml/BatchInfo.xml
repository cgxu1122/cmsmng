<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ifhz.core.mapper.BatchInfoMapper">

    <sql id="TABLE_NAME">TY_BATCH_INFO</sql>

    <resultMap id="BatchInfoResultMap" type="com.ifhz.core.po.BatchInfo">
        <id column="BATCH_ID" property="batchId" jdbcType="BIGINT"/>
        <result column="BATCH_CODE" property="batchCode" jdbcType="VARCHAR"/>
        <result column="GROUP_ID" property="groupId" jdbcType="BIGINT"/>
        <result column="START_TIME" property="startTime" jdbcType="DATE"/>
        <result column="BATCH_PRODUCT_NAME" property="batchProductName" jdbcType="VARCHAR"/>
        <result column="BATCH_PRODUCT_NUM" property="batchProductNum" jdbcType="INTEGER"/>
        <result column="ACTIVE" property="active" jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR"/>
        <collection property="productInfoList" column="BATCH_ID" javaType="ArrayList"
                    ofType="com.ifhz.core.po.ProductInfo"
                    select="com.ifhz.core.mapper.ProductInfoMapper.queryByBatchId"/>
    </resultMap>
    <select id="getSeqByGroupId" parameterType="long" resultType="long">
        <if test="_parameter==1">
            SELECT SEQ_BATCH_INFO_TY.NEXTVAL FROM DUAL
        </if>
        <if test="_parameter==2">
            SELECT SEQ_BATCH_INFO_DB.NEXTVAL FROM DUAL
        </if>
        <if test="_parameter==3">
            SELECT SEQ_BATCH_INFO_QT.NEXTVAL FROM DUAL
        </if>
    </select>
    <select id="getById" parameterType="long" resultMap="BatchInfoResultMap">
        select * from
        <include refid="TABLE_NAME"/>
        where BATCH_ID = #{batchId}
    </select>

    <insert id="insert" parameterType="com.ifhz.core.po.BatchInfo">
        <selectKey resultType="long" keyProperty="batchId">
            SELECT SEQ_BATCH_INFO.CURRVAL FROM DUAL
        </selectKey>
        insert into
        <include refid="TABLE_NAME"/>
        <![CDATA[
        (BATCH_ID,BATCH_CODE,GROUP_ID,START_TIME)
        values
        (SEQ_BATCH_INFO.NEXTVAL,#{batchCode},#{groupId},#{startTime})
        ]]>
    </insert>
    <update id="update" parameterType="com.ifhz.core.po.BatchInfo">
        update
        <include refid="TABLE_NAME"/>
        <set>
            <if test="batchCode != null">
                BATCH_CODE = #{batchCode},
            </if>
            <if test="groupId != null">
                GROUP_ID = #{groupId},
            </if>
            <if test="startTime != null">
                START_TIME = #{startTime},
            </if>
            <if test="batchProductName != null">
                BATCH_PRODUCT_NAME = #{batchProductName},
            </if>
            <if test="batchProductNum != null">
                BATCH_PRODUCT_NUM = #{batchProductNum},
            </if>
            <if test="active != null">
                ACTIVE = #{active},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime},
            </if>
        </set>
        where BATCH_ID = #{batchId}
    </update>
    <select id="queryByVo" parameterType="com.ifhz.core.po.BatchInfo" resultMap="BatchInfoResultMap">
        select bi.*,cg.GROUP_NAME from
        <include refid="TABLE_NAME"/>
        bi
        LEFT OUTER JOIN TY_CHANNEL_GROUP cg ON bi.GROUP_ID=cg.GROUP_ID
        where 1=1
        <if test="record.batchCode != null and record.batchCode != ''">
            and bi.BATCH_CODE = #{record.batchCode}
        </if>
        <if test="record.batchCodeCondition != null and record.batchCodeCondition != ''">
            and bi.BATCH_CODE LIKE concat(concat('%',#{record.batchCodeCondition}),'%' )
        </if>
        <if test="record.groupId != null and record.groupId != ''">
            and bi.GROUP_ID = #{record.groupId}
        </if>
        <if test="record.batchProductName != null and record.batchProductName != ''">
            and bi.BATCH_PRODUCT_NAME LIKE concat(concat('%', #{record.batchProductName}),'%' )
        </if>
        <if test="record.active != null and record.active != ''">
            and bi.ACTIVE = #{record.active}
        </if>
        order by bi.UPDATE_TIME desc
    </select>
    <delete id="delete" parameterType="com.ifhz.core.po.BatchInfo">
        delete from
        <include refid="TABLE_NAME"/>
        where BATCH_ID = #{batchId}
    </delete>
</mapper>